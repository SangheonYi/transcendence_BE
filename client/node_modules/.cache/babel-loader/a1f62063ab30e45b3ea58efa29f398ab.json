{"ast":null,"code":"import _slicedToArray from\"/goinfre/jinkim/bye_blackhole/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import ChatInput from\"./ChatInput\";import ChatLog from\"./ChatLog\";import Loading from\"./Loading\";import UserList from\"./UserList\";import\"./styles/Chat.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var socketIOClient=require('socket.io-client');var Chat=function Chat(_ref){var roomName=_ref.roomName,userName=_ref.userName,icon=_ref.icon;var myInfo={roomName:roomName?roomName:sessionStorage.getItem(\"roomName\"),userName:userName?userName:sessionStorage.getItem(\"userName\"),icon:icon?icon:sessionStorage.getItem(\"icon\")};var _useState=useState(socketIOClient()),_useState2=_slicedToArray(_useState,2),currentSocket=_useState2[0],setCurrentSocket=_useState2[1];useEffect(function(){setCurrentSocket(socketIOClient(\"http://localhost:8080\"));},[]);if(currentSocket){currentSocket.on(\"connect\",function(){currentSocket.emit(\"join\",myInfo);});}return/*#__PURE__*/_jsx(\"div\",{children:currentSocket?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{id:\"Chat-container\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"Chat-box ChatLog\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ChatLog-top\",children:/*#__PURE__*/_jsx(ChatLog,{userName:userName,socket:currentSocket})}),/*#__PURE__*/_jsx(\"div\",{className:\"ChatInput\",children:/*#__PURE__*/_jsx(ChatInput,{userName:userName,socket:currentSocket})})]}),/*#__PURE__*/_jsx(\"span\",{className:\"Chat-box UserList\",children:/*#__PURE__*/_jsx(UserList,{socket:currentSocket})})]})}):/*#__PURE__*/_jsx(Loading,{})});};export default Chat;","map":{"version":3,"sources":["/goinfre/jinkim/bye_blackhole/client/src/Chat/Chat.tsx"],"names":["React","useEffect","useState","ChatInput","ChatLog","Loading","UserList","socketIOClient","require","Chat","roomName","userName","icon","myInfo","sessionStorage","getItem","currentSocket","setCurrentSocket","on","emit"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,mBAAP,C,6IAEA,GAAMC,CAAAA,cAAc,CAAGC,OAAO,CAAC,kBAAD,CAA9B,CAQA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA2C,IAAxCC,CAAAA,QAAwC,MAAxCA,QAAwC,CAA9BC,QAA8B,MAA9BA,QAA8B,CAApBC,IAAoB,MAApBA,IAAoB,CACtD,GAAMC,CAAAA,MAAM,CAAG,CACbH,QAAQ,CAAEA,QAAQ,CAAGA,QAAH,CAAcI,cAAc,CAACC,OAAf,CAAuB,UAAvB,CADnB,CAEbJ,QAAQ,CAAEA,QAAQ,CAAGA,QAAH,CAAcG,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAFnB,CAGhBH,IAAI,CAAEA,IAAI,CAAGA,IAAH,CAAUE,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAHJ,CAAf,CADsD,cAOZb,QAAQ,CAACK,cAAc,EAAf,CAPI,wCAO/CS,aAP+C,eAOhCC,gBAPgC,eAStDhB,SAAS,CAAC,UAAM,CACdgB,gBAAgB,CAACV,cAAc,CAAC,uBAAD,CAAf,CAAhB,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIS,aAAJ,CAAmB,CACjBA,aAAa,CAACE,EAAd,CAAiB,SAAjB,CAA4B,UAAM,CAChCF,aAAa,CAACG,IAAd,CAAmB,MAAnB,CAA2BN,MAA3B,EACD,CAFD,EAGD,CAGD,mBACE,qBACGG,aAAa,cACZ,sCACJ,aAAK,EAAE,CAAC,gBAAR,wBACC,cAAM,SAAS,CAAC,kBAAhB,wBACO,YAAK,SAAS,CAAC,aAAf,uBACP,KAAC,OAAD,EAAS,QAAQ,CAAEL,QAAnB,CAA6B,MAAM,CAAEK,aAArC,EADO,EADP,cAID,YAAK,SAAS,CAAC,WAAf,uBACS,KAAC,SAAD,EAAW,QAAQ,CAAEL,QAArB,CAA+B,MAAM,CAAEK,aAAvC,EADT,EAJC,GADD,cASC,aAAM,SAAS,CAAC,mBAAhB,uBACC,KAAC,QAAD,EAAU,MAAM,CAAEA,aAAlB,EADD,EATD,GADI,EADY,cAkBZ,KAAC,OAAD,IAnBJ,EADF,CAwBD,CA5CD,CA8CA,cAAeP,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport \"./styles/Chat.css\"\n\nconst socketIOClient = require('socket.io-client')\n\ninterface chatObj{\n\troomName: any,\n\tuserName: any,\n\ticon: any\n}\n\nconst Chat = ({ roomName, userName, icon }: chatObj) => {\n  const myInfo = {\n    roomName: roomName ? roomName : sessionStorage.getItem(\"roomName\"),\n    userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n\ticon: icon ? icon : sessionStorage.getItem(\"icon\"),\n  };\n\n  const [currentSocket, setCurrentSocket] = useState(socketIOClient());\n\n  useEffect(() => {\n    setCurrentSocket(socketIOClient(\"http://localhost:8080\"));\n  }, []);\n\n  if (currentSocket) {\n    currentSocket.on(\"connect\", () => {\n      currentSocket.emit(\"join\", myInfo);\n    });\n  }\n\n\n  return (\n    <div>\n      {currentSocket ? (\n        <>\n\t\t  <div id=\"Chat-container\">\n\t\t  \t<span className=\"Chat-box ChatLog\">\n          \t\t<div className=\"ChatLog-top\">\n\t\t\t\t\t<ChatLog userName={userName} socket={currentSocket}></ChatLog>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ChatInput\">\n          \t\t\t<ChatInput userName={userName} socket={currentSocket}></ChatInput>\n\t\t  \t\t</div>\n\t\t  \t</span>\n\t\t  \t<span className=\"Chat-box UserList\">\n\t\t  \t\t<UserList socket={currentSocket}></UserList>\n\t\t  \t</span>\n\t\t  </div>\n\n        </>\n      ) : (\n        <Loading></Loading>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}