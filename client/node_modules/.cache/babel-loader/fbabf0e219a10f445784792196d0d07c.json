{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/UserList.scss\";\nimport images from '../images/Images';\nimport crown from '../images/crown.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  socket\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState([{\n    id: '2222',\n    icon: 'woman_icon',\n    status: 'administrator'\n  }, {\n    id: '3333',\n    icon: 'man_icon',\n    status: 'none'\n  }, {\n    id: 'jinkim',\n    icon: 'gamer_boy',\n    status: 'owner'\n  }]);\n  useEffect(() => {\n    socket.on(\"UserList\", newUser => {\n      setUserList(newUser);\n    });\n    return () => {\n      socket.disconnect();\n    }; //userSorting()\n  }, [socket]);\n\n  function userSorting() {\n    let temp = userList;\n    const owner = temp.find(ele => {\n      if (ele.status === 'owner') return true;\n    });\n    setUserList([owner]);\n    let idx = temp.indexOf(owner);\n    if (idx > -1) temp.splice(idx, 1);\n    temp.forEach(ele => {\n      if (ele.status === 'administrator') {\n        setUserList(userList => [...userList, ele]);\n        idx = temp.indexOf(ele);\n        if (idx > -1) temp.splice(idx, 1);\n      }\n    });\n    setUserList(userList => [...userList, temp]);\n    console.log();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList-container\",\n    children: userList === null || userList === void 0 ? void 0 : userList.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"userList-btn\",\n        onClick: userSorting,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"iconBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: images(user.icon),\n              width: \"30\",\n              height: \"30\",\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.status !== 'none' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: crown,\n              width: \"20\",\n              height: \"20\",\n              className: user.status === 'owner' ? 'crown owner' : 'crown administrator'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"id\",\n          children: user.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserList, \"ViDwvBBVmWR3j6drlgNDylD6ceI=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx"],"names":["React","useEffect","useState","images","crown","UserList","socket","userList","setUserList","id","icon","status","on","newUser","disconnect","userSorting","temp","owner","find","ele","idx","indexOf","splice","forEach","console","log","map","user"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./styles/UserList.scss\"\nimport images from '../images/Images'\nimport crown from '../images/crown.png'\nimport { string } from \"yargs\";\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, icon:string, status:string}[]>([{id:'2222', icon:'woman_icon', status:'administrator'}, {id:'3333', icon:'man_icon', status:'none'}, {id:'jinkim', icon:'gamer_boy', status:'owner'}]);\n\n\tuseEffect(() => {\n\t\tsocket.on(\"UserList\", (newUser:{id: string, icon:string, status:string}[]) => {\n\t\t\tsetUserList(newUser);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t\t//userSorting()\n\t}, [socket]);\n\n\tfunction userSorting()\n\t{\n\t\tlet temp = userList;\n\t\t\n\t\tconst owner = temp.find((ele) => {\n\t\t\tif (ele.status === 'owner')\n\t\t\t\treturn true;\n\t\t})\n\t\tsetUserList([owner as never]);\n\t\tlet idx = temp.indexOf(owner as never)\n\t\tif (idx > -1) temp.splice(idx, 1)\n\n\t\ttemp.forEach((ele) => {\n\t\t\tif (ele.status === 'administrator')\n\t\t\t{\n\t\t\t\tsetUserList((userList) => [...userList, ele as never]);\n\t\t\t\tidx = temp.indexOf(ele as never)\n\t\t\t\tif (idx > -1) temp.splice(idx, 1)\n\t\t\t}\n\t\t})\n\n\t\tsetUserList((userList) => [...userList, temp as never]);\n\t\tconsole.log();\n\t}\n\n\treturn (\n\t\t<div className=\"userList-container\">\n\t\t\t{userList?.map(user=>\n\t\t\t<div>\n\t\t\t<button className=\"userList-btn\" onClick={userSorting}>\n\t\t\t\t<span className=\"iconBox\">\n\t\t\t\t\t<span><img src={images(user.icon)} width=\"30\" height=\"30\" className=\"icon\"/></span>\n\t\t\t\t\t<span>\n\t\t\t\t\t{user.status !== 'none' ?\n\t\t\t\t\t\t<img src={crown} width=\"20\" height=\"20\" className={user.status === 'owner' ? 'crown owner' : 'crown administrator'}/>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span className='id'>{user.id}</span>\n\t\t\t</button>\n\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n"]},"metadata":{},"sourceType":"module"}